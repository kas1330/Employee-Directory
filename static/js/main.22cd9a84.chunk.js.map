{"version":3,"sources":["header.js","searchBar.js","API.js","components/table/index.js","employee.js","footer.js","App.js","index.js"],"names":["Header","className","Search","props","htmlFor","type","value","inp","onChange","e","searchFilterOnChange","randomUserGen","getRandEmpInfo","axios","get","Table","scope","console","log","emp","length","map","employee","src","picture","thumbnail","name","first","last","cell","email","dob","age","id","Employee","Footer","App","state","employeeSort","inputValue","event","target","setState","filteredList","filter","toLowerCase","l","includes","API","then","res","data","results","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAYeA,MAVf,WACE,OACE,qBAAKC,UAAU,4BAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,eCQNC,EAbA,SAACC,GACd,OACE,qCACE,uBAAOC,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLC,MAAOH,EAAMI,IACbC,SAAU,SAACC,GAAD,OAAON,EAAMO,qBAAqBD,U,iBCDrCE,EAJO,CACpBC,eAAgB,kBAAMC,IAAMC,IAHf,wDCuCAC,MAxCf,SAAeZ,GACb,OACE,wBAAOF,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIe,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,kCACGC,QAAQC,IAAIf,EAAMgB,KAClBhB,EAAMgB,IAAIC,OAAS,EAClBjB,EAAMgB,IAAIE,KAAI,SAACC,GACb,OACE,+BACE,qBAAIN,MAAM,MAAV,UACE,qBAAKO,IAAKD,EAASE,QAAQC,YAAc,OAE3C,+BACGH,EAASI,KAAKC,MADjB,IACyBL,EAASI,KAAKE,QAEvC,6BAAKN,EAASO,OACd,6BAAKP,EAASQ,QACd,6BAAKR,EAASS,IAAIC,QATXV,EAASW,GAAG3B,UAczB,6BACE,oBAAIU,MAAM,MAAV,wBClBGkB,EATE,SAAC/B,GAChB,OACE,gCACGc,QAAQC,IAAIf,EAAMgB,KAEnB,cAAC,EAAD,CAAOA,IAAKhB,EAAMgB,UCATgB,MATf,WACE,OACE,iCACE,qBAAKlC,UAAU,YAAf,SACE,sBAAMA,UAAU,oBCuDTmC,G,kNAnDbC,MAAQ,CACNf,SAAU,GACVgB,aAAc,GACdC,WAAY,I,EAYd7B,qBAAuB,SAAC8B,GACtBvB,QAAQC,IAAI,mBAAoBsB,EAAMC,OAAOnC,OAC7C,EAAKoC,SAAS,CACZH,WAAYC,EAAMC,OAAOnC,QAE3B,IAAIqC,EAAe,EAAKN,MAAMf,SAASsB,QAAO,SAACtB,GAC7C,IAAIb,EAAIa,EAASI,KAAKC,MAAMkB,cAExBC,EAAIxB,EAASI,KAAKE,KAAKiB,cAC3B,OACEpC,EAAEsC,SAASP,EAAMC,OAAOnC,MAAMuC,gBAC9BC,EAAEC,SAASP,EAAMC,OAAOnC,MAAMuC,kBAGlC,EAAKH,SAAS,CACZJ,aAAcK,K,kEAzBG,IAAD,OAClB1B,QAAQC,IAAI,sBACZ8B,EAAIpC,iBAAiBqC,MAAK,SAACC,GAEzB,EAAKR,SAAS,CACZpB,SAAU4B,EAAIC,KAAKC,QACnBd,aAAcY,EAAIC,KAAKC,e,+BAyB3B,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEjC,IAAKkC,KAAKhB,MAAMC,aAChB/B,IAAK8C,KAAKhB,MAAME,WAChB7B,qBAAsB2C,KAAK3C,uBAE7B,cAAC,EAAD,CAAUS,IAAKkC,KAAKhB,MAAMC,eAP5B,IAQE,cAAC,EAAD,W,GA9CUgB,cCLlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22cd9a84.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Employee Directory</h1>\r\n        <p className=\"lead\"></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"search\">Search</label>\r\n      <input\r\n        type=\"text\"\r\n        value={props.inp}\r\n        onChange={(e) => props.searchFilterOnChange(e)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\n\r\nconst APIURL = \"https://randomuser.me/api/?results=10&nat=us,gb,au\";\r\n\r\nconst randomUserGen = {\r\n  getRandEmpInfo: () => axios.get(APIURL),\r\n};\r\n\r\nexport default randomUserGen;\r\n","import React from \"react\";\r\nfunction Table(props) {\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Image</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Phone</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Age</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {console.log(props.emp)}\r\n        {props.emp.length > 0 ? (\r\n          props.emp.map((employee) => {\r\n            return (\r\n              <tr key={employee.id.value}>\r\n                <td scope=\"row\">\r\n                  <img src={employee.picture.thumbnail} />{\" \"}\r\n                </td>\r\n                <td>\r\n                  {employee.name.first} {employee.name.last}\r\n                </td>\r\n                <td>{employee.cell}</td>\r\n                <td>{employee.email}</td>\r\n                <td>{employee.dob.age}</td>\r\n              </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"./API\";\r\nimport Search from \"./searchBar\";\r\nimport Table from \"./components/table\";\r\n\r\n//kind of like the model. data will be passed here and this will show how it should be formatted, then this will be called from the app.js\r\nconst Employee = (props) => {\r\n  return (\r\n    <div>\r\n      {console.log(props.emp)}\r\n\r\n      <Table emp={props.emp} />\r\n    </div>\r\n  );\r\n};\r\nexport default Employee;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <span className=\"text-muted\"></span>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport reactDOM from \"react-dom\";\nimport Header from \"./header\";\nimport Search from \"./searchBar\";\nimport Employee from \"./employee\";\nimport Footer from \"./footer\";\nimport API from \"./API\";\nimport \"./app.css\";\n//.sort for alphabetize\nclass App extends Component {\n  state = {\n    employee: [],\n    employeeSort: [],\n    inputValue: \"\",\n  };\n  componentDidMount() {\n    console.log(\"component was born\");\n    API.getRandEmpInfo().then((res) => {\n      //  console.log(res.data.results);\n      this.setState({\n        employee: res.data.results,\n        employeeSort: res.data.results,\n      });\n    });\n  }\n  searchFilterOnChange = (event) => {\n    console.log(\"OnChange running\", event.target.value);\n    this.setState({\n      inputValue: event.target.value,\n    });\n    let filteredList = this.state.employee.filter((employee) => {\n      let e = employee.name.first.toLowerCase();\n      // console.log(\"E: \", e);\n      let l = employee.name.last.toLowerCase();\n      return (\n        e.includes(event.target.value.toLowerCase()) ||\n        l.includes(event.target.value.toLowerCase())\n      );\n    });\n    this.setState({\n      employeeSort: filteredList,\n    });\n  };\n\n  // handleSubmit = (event) => {};\n  render() {\n    return (\n      <>\n        <Header />\n        <Search\n          emp={this.state.employeeSort}\n          inp={this.state.inputValue}\n          searchFilterOnChange={this.searchFilterOnChange}\n        />\n        <Employee emp={this.state.employeeSort} />;\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* how you want things to be laid out */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}